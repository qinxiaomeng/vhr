<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xiaom.vhr.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="org.xiaom.vhr.model.Employee">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="gender" property="gender" jdbcType="CHAR"/>
    <result column="birthday" property="birthday" jdbcType="DATE"/>
    <result column="idCard" property="idCard" jdbcType="CHAR"/>
    <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
    <result column="nationId" property="nationId" jdbcType="INTEGER"/>
    <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
    <result column="politicId" property="politicId" jdbcType="INTEGER"/>
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
    <result column="address" property="address" jdbcType="VARCHAR"/>
    <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
    <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
    <result column="posId" property="posId" jdbcType="INTEGER"/>
    <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
    <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
    <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
    <result column="school" property="school" jdbcType="VARCHAR"/>
    <result column="beginDate" property="beginDate" jdbcType="DATE"/>
    <result column="workState" property="workState" jdbcType="CHAR"/>
    <result column="workID" property="workID" jdbcType="CHAR"/>
    <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
    <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
    <result column="notWorkDate" property="notWorkDate" jdbcType="DATE"/>
    <result column="beginContract" property="beginContract" jdbcType="DATE"/>
    <result column="endContract" property="endContract" jdbcType="DATE"/>
    <result column="workAge" property="workAge" jdbcType="INTEGER"/>
  </resultMap>
  <resultMap id="AllEmployeeInfo" type="org.xiaom.vhr.model.Employee" extends="BaseResultMap">
    <association property="nation" javaType="org.xiaom.vhr.model.Nation">
      <id column="nid" property="id"/>
      <result column="nname" property="name"/>
    </association>
    <association property="politicsstatus" javaType="org.xiaom.vhr.model.Politicsstatus">
      <id column="pid" property="id"/>
      <result column="pname" property="name"/>
    </association>
    <association property="department" javaType="org.xiaom.vhr.model.Department">
      <id column="did" property="id"/>
      <result column="dname" property="name"/>
    </association>
    <association property="jobLevel" javaType="org.xiaom.vhr.model.JobLevel">
      <id column="jid" property="id"/>
      <result column="jname" property="name"/>
    </association>
    <association property="position" javaType="org.xiaom.vhr.model.Position">
      <id column="posid" property="id"/>
      <result column="posname" property="name"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
        phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty,
        school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge
    </sql>
  <select id="getEmployeeByPage" resultMap="AllEmployeeInfo">
    select e.*,p.`id` as pid,p.`name` as pname,n.`id` as nid,n.`name` as nname,d.`id` as did,d.`name` as
    dname,j.`id` as jid,j.`name` as jname,pos.`id` as posid,pos.`name` as posname from employee e,nation
    n,politicsstatus p,department d,joblevel j,position pos where e.`nationId`=n.`id` and e.`politicId`=p.`id` and
    e.`departmentId`=d.`id` and e.`jobLevelId`=j.`id` and e.`posId`=pos.`id`
    <if test="emp.name !=null and emp.name!=''">
      and e.name like concat('%',#{emp.keyword},'%')
    </if>
    <if test="emp.politicId !=null">
      and e.politicId =#{emp.politicId}
    </if>
    <if test="emp.nationId !=null">
      and e.nationId =#{emp.nationId}
    </if>
    <if test="emp.departmentId !=null">
      and e.departmentId =#{emp.departmentId}
    </if>
    <if test="emp.jobLevelId !=null">
      and e.jobLevelId =#{emp.jobLevelId}
    </if>
    <if test="emp.engageForm !=null and emp.engageForm!=''">
      and e.engageForm =#{emp.engageForm}
    </if>
    <if test="emp.posId !=null">
      and e.posId =#{emp.posId}
    </if>
    <if test="beginDateScope !=null">
      and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal" resultType="java.lang.Long">
    select count(*) from employee e
    <where>
      <if test="emp!=null">
        <if test="emp.name !=null and emp.name!=''">
          and e.name like concat('%',#{keyword},'%')
        </if>
        <if test="emp.politicId !=null">
          and e.politicId =#{emp.politicId}
        </if>
        <if test="emp.nationId !=null">
          and e.nationId =#{emp.nationId}
        </if>
        <if test="emp.jobLevelId !=null">
          and e.jobLevelId =#{emp.jobLevelId}
        </if>
        <if test="emp.departmentId !=null">
          and e.departmentId =#{emp.departmentId}
        </if>
        <if test="emp.engageForm !=null and emp.engageForm!=''">
          and e.engageForm =#{emp.engageForm}
        </if>
        <if test="emp.posId !=null">
          and e.posId =#{emp.posId}
        </if>
      </if>
      <if test="beginDateScope !=null">
        and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
      </if>
    </where>
  </select>
  <select id="maxWorkID" resultType="java.lang.Integer">
        select max(workID) from employee
    </select>
  <insert id="insert" parameterType="org.xiaom.vhr.model.Employee">
    insert into employee (id, name, gender, 
      birthday, idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{idcard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationid,jdbcType=INTEGER}, 
      #{nativeplace,jdbcType=VARCHAR}, #{politicid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentid,jdbcType=INTEGER}, 
      #{joblevelid,jdbcType=INTEGER}, #{posid,jdbcType=INTEGER}, #{engageform,jdbcType=VARCHAR}, 
      #{tiptopdegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{begindate,jdbcType=DATE}, #{workstate,jdbcType=CHAR}, #{workid,jdbcType=CHAR}, 
      #{contractterm,jdbcType=DOUBLE}, #{conversiontime,jdbcType=DATE}, #{notworkdate,jdbcType=DATE}, 
      #{begincontract,jdbcType=DATE}, #{endcontract,jdbcType=DATE}, #{workage,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.xiaom.vhr.model.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="wedlock != null">
        wedlock,
      </if>
      <if test="nationid != null">
        nationId,
      </if>
      <if test="nativeplace != null">
        nativePlace,
      </if>
      <if test="politicid != null">
        politicId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="joblevelid != null">
        jobLevelId,
      </if>
      <if test="posid != null">
        posId,
      </if>
      <if test="engageform != null">
        engageForm,
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="workstate != null">
        workState,
      </if>
      <if test="workid != null">
        workID,
      </if>
      <if test="contractterm != null">
        contractTerm,
      </if>
      <if test="conversiontime != null">
        conversionTime,
      </if>
      <if test="notworkdate != null">
        notWorkDate,
      </if>
      <if test="begincontract != null">
        beginContract,
      </if>
      <if test="endcontract != null">
        endContract,
      </if>
      <if test="workage != null">
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null">
        #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null">
        #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        #{workage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="employeeRemove">
    update employee set departmentid=#{newDepId}, joblevelid=#{newJobLevelId}
    where id=#{id}
  </update>
</mapper>